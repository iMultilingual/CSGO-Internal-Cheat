#pragma once
#include "Entity.hpp"

class CSGO
{
public:
	static void StartExploit()
	{
		for (;;)
		{
			std::uintptr_t ModuleBase = reinterpret_cast<std::uintptr_t>(GetModuleHandleW(L"client.dll"));
			std::uintptr_t EngineBase = reinterpret_cast<std::uintptr_t>(GetModuleHandleW(L"engine.dll"));

			std::uintptr_t LocalPlayer_Function = ModuleBase + LocalPlayer_Offset;
			std::uintptr_t GlowObject_Function = ModuleBase + GlowObjectManager_Offset;
			std::uintptr_t EntityList_Function = ModuleBase + EntityList_Offset;

			std::uintptr_t LocalPlayer_Pointer = *reinterpret_cast<std::uintptr_t*>(LocalPlayer_Function);
			std::uintptr_t GlowObject_Pointer = *reinterpret_cast<std::uintptr_t*>(GlowObject_Function);
			std::uintptr_t EntityList_Pointer = *reinterpret_cast<std::uintptr_t*>(EntityList_Function);

			Entity* LocalPlayer = nullptr;

			if (*reinterpret_cast<std::int32_t*>(*reinterpret_cast<std::uintptr_t*>(EngineBase + ClientState_Offset) + ClientState_State_Offset) != 6)
				continue;
			if ((LocalPlayer = *reinterpret_cast<Entity**>(ModuleBase + LocalPlayer_Offset)) == nullptr)
				continue;

			/* Anti Flash */
			if (LocalPlayer->FlashDuration() > 0)
				LocalPlayer->FlashDuration() = 0;

			if (LocalPlayer_Pointer != NULL && GlowObject_Pointer != NULL && EntityList_Pointer != NULL)
			{
				std::int32_t TeamNumber = *reinterpret_cast<std::int32_t*>(LocalPlayer_Pointer + TeamNumber_Offset);
				for (std::int16_t Iteration = 0; Iteration < 64; ++Iteration)
				{
					std::uintptr_t Entity = *reinterpret_cast<std::uintptr_t*>(EntityList_Function + Iteration * 0x10); /* 0x4DA2F44 -> EntityList */

					if (Entity == 0)
						continue;
					if (*reinterpret_cast<bool*>(Entity + Dormant_Offset))
						continue;

					/* Radar */
					if (Entity)
						*reinterpret_cast<DWORD*>(Entity + Spotted_Offset) = true;

					/* Trigger Bot */
					bool Activate = false;

					if (GetAsyncKeyState(VK_MENU) & 1)
						Activate != Activate;

					if (!Activate)
					{
						std::int32_t CrossHairID = *reinterpret_cast<std::int32_t*>(LocalPlayer_Pointer + CrossHair_Offset);
						if (CrossHairID <= 64 && CrossHairID > 0)
						{
							std::uintptr_t CrossHairEntity = *reinterpret_cast<std::uintptr_t*>(EntityList_Function + (CrossHairID - 1) * 0x10);
							if (CrossHairEntity)
							{
								std::int32_t TeamNumber = *reinterpret_cast<std::int32_t*>(LocalPlayer_Pointer + TeamNumber_Offset);

								std::int32_t CrossHairTeam = *reinterpret_cast<std::int32_t*>(CrossHairEntity + TeamNumber_Offset);
								std::int32_t CrossHairLifeState = *reinterpret_cast<std::int32_t*>(CrossHairEntity + LifeState_Offset);

								if ((TeamNumber != CrossHairTeam) && (CrossHairLifeState == 0))
								{
									mouse_event(MOUSEEVENTF_LEFTDOWN, NULL, NULL, 0, 0);
									mouse_event(MOUSEEVENTF_LEFTUP, NULL, NULL, 0, 0);
									Sleep(30);
								}
							}
						}
					}

					std::int32_t GlowIndex = *reinterpret_cast<std::int32_t*>(Entity + GlowIndex_Offset); /* 0xA428 -> GlowIndex*/
					std::int32_t EntityTeam = *reinterpret_cast<std::int32_t*>(Entity + TeamNumber_Offset); /* 0xF4 -> TeamNum*/

					if (EntityTeam == TeamNumber)
					{
						*reinterpret_cast<float*>((GlowObject_Pointer)+((GlowIndex * 0x38) + 0xC)) = 2.f;      /* B */
						*reinterpret_cast<float*>((GlowObject_Pointer)+((GlowIndex * 0x38) + 0x10)) = 1.f;    /* A */
					}
					else
					{
						*reinterpret_cast<float*>((GlowObject_Pointer)+((GlowIndex * 0x38) + 0x4)) = 2.f;   /* R */
						*reinterpret_cast<float*>((GlowObject_Pointer)+((GlowIndex * 0x38) + 0x10)) = 1.f;    /* A */
					}
					*reinterpret_cast<bool*>((GlowObject_Pointer)+((GlowIndex * 0x38) + 0x24)) = true;
					*reinterpret_cast<bool*>((GlowObject_Pointer)+((GlowIndex * 0x38) + 0x25)) = false;
				}
			}
		}
	}
};